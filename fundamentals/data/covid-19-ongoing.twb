<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='covid-us-clean' inline='true' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid-us-clean' name='textscan.1u5n46n1n8pxuq16191pd0fyfzmj'>
            <connection class='textscan' directory='C:/Users/Paul/anaconda-projects/data-science/fundamentals/data' filename='covid-us-clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1u5n46n1n8pxuq16191pd0fyfzmj' name='covid-us-clean.csv' table='[covid-us-clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='confirmed' ordinal='2' />
            <column datatype='integer' name='deaths' ordinal='3' />
            <column datatype='string' name='country' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1u5n46n1n8pxuq16191pd0fyfzmj' name='covid-us-clean.csv' table='[covid-us-clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='confirmed' ordinal='2' />
            <column datatype='integer' name='deaths' ordinal='3' />
            <column datatype='string' name='country' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid-us-clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid-us-clean.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[covid-us-clean.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[confirmed]</local-name>
            <parent-name>[covid-us-clean.csv]</parent-name>
            <remote-alias>confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[covid-us-clean.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid-us-clean.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='covid-us-clean.csv' datatype='table' name='[__tableau_internal_object_id__].[covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2]' role='measure' type='quantitative' />
      <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='country, state'>
          <field>[country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#33789d'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#53a9bd'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#a0d4d1'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;California&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid-us-clean.csv' id='covid-us-clean.csv_1B9668534F234BEA8B720BAD0076DDC2'>
            <properties context=''>
              <relation connection='textscan.1u5n46n1n8pxuq16191pd0fyfzmj' name='covid-us-clean.csv' table='[covid-us-clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='confirmed' ordinal='2' />
                  <column datatype='integer' name='deaths' ordinal='3' />
                  <column datatype='string' name='country' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Georgia Confirmed Covid-19 Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-us-clean' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j8ib9q1x4swwv100e4mb0tlyk0g'>
            <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Georgia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk] / ([federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk] / [federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[md:date:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{9BD325A9-E31F-4BB1-B1DD-10D3BC1469D9}' />
    </worksheet>
    <worksheet name='Georgia Covid-19 Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-us-clean' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j8ib9q1x4swwv100e4mb0tlyk0g'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Georgia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk] / ([federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk] / [federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[md:date:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{79F66624-96E3-46CD-8072-A2B959F8BE85}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-us-clean' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0j8ib9q1x4swwv100e4mb0tlyk0g'>
            <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[Longitude (generated)]' field-type='quantitative' max='34443915.723362207' min='24085645.206387453' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[Latitude (generated)]' field-type='quantitative' max='6792506.9114053408' min='919025.77952074434' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' />
              <lod column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk]' />
              <lod column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[Latitude (generated)]</rows>
        <cols>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{FCD1D1CA-0EE2-4402-9855-2B01DBC26C78}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-us-clean' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' />
          </datasources>
          <datasource-dependencies datasource='federated.0j8ib9q1x4swwv100e4mb0tlyk0g'>
            <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk] + [federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk])</rows>
        <cols>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{16A97A9C-FA95-4430-8704-5805CD36F85B}' />
    </worksheet>
    <worksheet name='Top 10 Covid-19 Outbreak States'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-us-clean' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' />
          </datasources>
          <datasource-dependencies datasource='federated.0j8ib9q1x4swwv100e4mb0tlyk0g'>
            <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[confirmed]' derivation='Sum' name='[sum:confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM(&#13;&#10;    IF [date] = #8/10/2021# &#13;&#10;    THEN [confirmed] END&#13;&#10;)' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]' direction='DESC' using='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' />
          <slices>
            <column>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#499894' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</rows>
        <cols>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]</cols>
      </table>
      <simple-id uuid='{8CEC5CE4-E5A7-4074-8418-BA5DA1135A7F}' />
    </worksheet>
    <worksheet name='Top 10 US States Covid-19 Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid-us-clean' name='federated.0j8ib9q1x4swwv100e4mb0tlyk0g' />
          </datasources>
          <datasource-dependencies datasource='federated.0j8ib9q1x4swwv100e4mb0tlyk0g'>
            <column caption='Confirmed' datatype='integer' name='[confirmed]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end'>
              <groupfilter direction='DESC' expression='SUM(&#13;&#10;    IF [date] = #8/10/2021# &#13;&#10;    THEN [confirmed] END&#13;&#10;)' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]' direction='DESC' using='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:deaths:qk]' />
          <slices>
            <column>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:deaths:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#499894' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</rows>
        <cols>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:deaths:qk]</cols>
      </table>
      <simple-id uuid='{448CB7FE-1796-41D9-B60E-BCB334355537}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-08-10#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{031566DD-5925-4325-862E-395B1529AA2A}' />
    </window>
    <window class='worksheet' name='Georgia Confirmed Covid-19 Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C845E2C8-B673-4CF8-901C-3151CD3C4C3C}' />
    </window>
    <window class='worksheet' name='Georgia Covid-19 Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7800FFBC-2B33-4D42-A95D-A9CBD5F3BCCD}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-15#</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:confirmed:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76440615-ACCC-4444-85C0-9105D67D4EAE}' />
    </window>
    <window class='worksheet' name='Top 10 Covid-19 Outbreak States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{771D5AF6-A009-49BD-85B0-192F217B5BBA}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 10 US States Covid-19 Deaths'>
      <cards>
        <edge name='left'>
          <strip size='190'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[sum:deaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:country:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[none:state:nk]</field>
            <field>[federated.0j8ib9q1x4swwv100e4mb0tlyk0g].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{015287D5-7296-4B1C-BD21-366E05175FA1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Georgia Confirmed Covid-19 Cases' width='192'>
      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
      YBBBEIT/AhtdqTGX+kXNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Georgia Covid-19 Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Mw3LABZnGv8fn++HLgzK9j0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Covid-19 Outbreak States' width='192'>
      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
      BGVJSaRQ2v8CyNxguym8KV0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 US States Covid-19 Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARbklEQVR4nO3d228c53nH8e/s7PnIXS6XZ1FLUqQs27QlW5QdOAVq5yY3BtqkLRwUvmmB
      XLT/QoHethcF2t4VCAL0gKJo46CIkyZqXB9kW5JlWrJOlChS4nnJ5R64552d3Z1euFbtSlVE
      kZwl/T6fy6HJ9xmZP+4777zPjGZZloUQinLYNZBlWUjWxEFjawCEOGhsC4AQB5HTzsH+/Jc/
      p9Iw7BxSiEeyNQC305sU63U7hxTikWQKJJQmARBKkwAIpUkAhNJ2FIDl5RVMo0q13nzga/VK
      kaphUigUv3K0RWptc7c1CrFvdrQKNHfzU1LpPhp1F9v5DY6MT5JbXWIwmWRsuI9f/OLfmXzm
      OT65cJ5AyIvpimBlN2loLzDcF9uvcxDiie3oE6BnaJzq1irF7QzzS6u0i1vgc7GSLqJ7AoyM
      j5EIu2i2WlTrTaaefZpCsUCr3dqv+oXYFc2uzXDtdpsf/MOP5T6AOFDkIlgoTQIglCYBEEqT
      AAil2boZbvrICFXTtHNIIR7J1lUgTdPQNM2O4YR4LDIFEkqTAAilSQCE0my9CP7RhY+pN+Ui
      WBwctgbg13O3ZCuEOFBkCiSUJgEQSpMACKVJAITSHj8AlsX87FWWUxkAKrl11rbyZNNrXL55
      96HfUixu70mRQuyXx14FMmtFyi0PJ6JefvJPf8/IsTFw+ylm1jE9cX71yzn8PjcVRxArt05o
      YIR4UOfCu2eJj5/h+aeG9/M8hHgijx0A3e0ln1rkdqtItmzS22gQ8PjpGxwh2NXD7Oc5NN3F
      yeeeJbfURUtv0qrl2ShU8JfK+3gKQjw5aYkUSpOLYKE0CYBQmgRAKE0CIJRm62a4/lCYoMdj
      55BCPJK0RAqlyRRIKE0CIJQmARBKs/Ui+OytWUx5UrQ4QGwNwI8/OS9bIcSBIlMgoTQJgFCa
      BEAoTQIglLbrALTMGlcvX+beSmov6hHCVrteBXLobuqlKgNHnbz3zq/p6RvEtKDL5yCVr9Mq
      phh/7lskosG9qFeIPbXrTwDNoRMMhnC0aly48AnZQolUapObVy/z6ZXLVEvbLK7Iu4LFwbQn
      m+FarRYOh4N6rYru8qA7NJpNEzQdq2XidHtxaEhLpDhw9uRGmK7rAPj8gQeOgQv4YjeoEAeN
      rAIJpUkAhNIkAEJpEgChNFtbIpv/0xYpxEFh63Zol65LAMSBIlMgoTQJgFCarVOgt65ewWg2
      7RxSHFIa8MYLp/d9HFsD8K9XPpOtEOKx2BUAmQIJpUkAhNIkAEJpEgChtF0FoNVq0mo2KFZq
      Xzv+5c3lUqm4mx8vBOl0mlKpxOLiIplMBsuymJubY3t7m5mZGTY2NnjvvfdYXV0ln8/z/vvv
      UywWmZmZoVAoMDc3x6M2O+xqFeg/fvZvHJt8hmLTQT23ydCRI2xka8QiOpVcjrzRIup20Dv6
      LP3x0G6GEooyDIN0Ok2hUMCyLKanp8nlcmxsbOByuVhfX+f48eMYhkE0GiUSifDRRx+haRrl
      chmv14thGHi93of+/F19Aui6E7fLSTG3Qax3gOtXrtKfHKO+naLpjRNwNFjf2uTmzYXdDCMU
      ZVkWq6ur3L59m3w+j2ma5PN5UqkU7XabWq1GpVJheXmZgYEB8vk8sViMeDxOvV7HMAxSqdRX
      mrMetKvNcJVKmYDPS7lusra0yNCRI7g8PkyjylZqnUAsTnZzg4GhEYIBn7REisemAT//4Z98
      7Vir1SKXy9HT0/PAf18sFtF1nUAg8MDXHmVXU6BA4IsnPQT9Tiafeur+cbczSGB8AoCeWAyQ
      lkixe7quP/SXHyAcDj/Rz5RVIKE0CYBQmgRAKM3WzXBep5OG09YhxSFlV+OUvCVSKE2mQEJp
      EgChNAmAUJqtV6SXlpdoyg0x5QU9HqYGBjtdBmBzAP7qvXdkK4RgPN7D33zv9ztdBiBTIKE4
      CYBQmgRAKE0CIJQmARAds729TavVwrIsMpkMzWaTbDZ7f9+/ZVm0Wi0ymQymaZLNZmm321Sr
      1T2r4TeuAr3/q7dJPnMKo1ylUC4zOpqkUi4QCofpinSxfPMWrp4wubxBl7dN1WhTNaHbZ2E6
      fHTFYtBsEIlE9qxocfhVKhUuXLhAKBTizJkzXLt2jVarRTqdxuPx0NPTQ29vL/39/Zw7d46x
      sTFu3rzJmTNnuHfvHq+++uqe1PEbAxCJD7J46yrZ9Sxm0EupZmAWN3FGh/ntl56nUqkyf+8W
      zbaPUMjN5PAAi1tZ5jcWCCeO4r1zjcT4C8jvv/gqn89HtVrF5XJRqVRwOp2Uy2V8Ph+GYRAI
      BDAMg0ajgcfjwTAMPB4Puq5jGAamaeJyuXZdx28MwPDIERjopjLhYGV1jaePjVBsJGk1Teql
      HBWPj5dOnmQpXWZkuA9n26A72ma8/xR1PUj63h1GhhKALXvuxCGhaRqnTp0iHo+Ty+UYGBhg
      enqa9fV1hoaGSKVSaJqGy+VicnKS3t5e4vE4oVCI0dHRPesw3OfdoG228yW6ohHa7bb0BAtA
      qRthDrqiMvcRB5esAgmlSQCE0iQAQmm2tkRuVcrYM5o4yFy6TvcOH2C1X6QnWChNpkBCaRIA
      oTRbO8LevTOH2WrZOaTYoZeOJon4fJ0uwza2BuDvzn8od4IPuNF4XKkAyBRIKE0CIJQmARBK
      kwAIpT00AEa1yO07d2k9xi2ySmGLqvnwr1Wrld3UJjpkbW2N27dvY1kWW1tbLC4u0m632d7e
      ZnNzk3K5DIBpmpRKJVZXVymXyywsLJDP5ztc/c48dBUodWueRtjNe+9/hEPTiPgcbBsWQadJ
      QwugG9t09w/i9QXJrN6hERxhMKzTMMrkaxaV9Bqh/qOEPW2K2QxdQ09xdCBm97mJJxQMBrlx
      4wYTExNcunSJsbExZmdnWVpawu12o2kar732GjMzM7RaLeLxOPPz86yvr/Pd73630+XvyEM/
      Aax2g7V0BU+7wI3rN6hpfrojHpyBCGG3g3qlQKbY5NLHHxGJhgk6m1y7l+L29ctcuXKdaPcQ
      tOuUcxvMfH6FO3NLdp+X2IVms8no6CjlcpmBgQGuXLnC2toaW1tb1Go1SqUSuVyOdDrN2toa
      MzMzjIyM0Nvby/Xr1ztd/o48dC9Qq9lEczqh1aRQqhAMBvjqDp56rYqua1y9Ps/pF57F0hw0
      my1ajTqa043L+eVrKS2q1So+XwBdd0hH2CHw17/7eySjMXRdZ3l5mXg8DkAgEMA0TWq1Gh6P
      h3Q6zdDQEM1mk2KxiMfjwTRNQqEQzkP0EpSHVqp/eQK6k2jXgx1dwdAXb+Q7M33yf7/H7QD3
      g03K4fAX3y9viTw8vvwFHhkZ+dpxl8t1vxF9eHj4/rHu7m57C9xDsgoklCYBEEqTAAilSQCE
      0mztCKs3TUA6wg4yr9OJw6HO30VpiRRKUyfqQjyEBEAozdZbdvOZLdpteS7KQaRpGhOJRKfL
      sJ2tAfizX/xMtkIcUB6nk5/+0Q87XYbtZAoklCYBEEqTAAilSQCE0nYdgEatTLFQRh53JQ6j
      Xa0CrcxepoRFPqvTFfeja3UyeYOhbj+5uoOgS6dezpBIPk0iGtyrmsU+sSyLixcvsrq6yve/
      /30uXryIaZp89tlnfPvb3yaXyxEKhTh9+jRvvfUWyWSS5eVl+vv72djYYHp6mv7+/k6fxo7s
      bhnUsu5v7alWa6A3ibpdrG9XcLYtKi43plEjk8lJAA4BTdNIJBKMjY3RaDSYn5/H6XQyNTXF
      1tYWoVAIXdfZ2Nggl8sRDofRNI1Go0G9Xt/T9/faZVcB6Bk5RgwY7NfQdECz0C2NhlEkX3OQ
      6AqytrxA79Dh+qugsng8TiAQYG5ujjfeeINqtUoqlSIajbKwsEAikaDdbvPmm29iGAazs7Mc
      P36ccDjM6Ohop8vfMVs3w0lP8MElN8KEUJAEQChNAiCUJgEQSrP1InhuK01bXhN5IGmaxlO9
      fZ0uw3bSEimUJlMgoTQJgFCarR1hV9ZWacozQndkamAQzyF62OxhY+u/7F+8c1buBO/Qj3/w
      Jr2hUKfL+MaSKZBQmgRAKE0CIJQmARBKkwAcAvV6nVKpBECtVqNSqWBZFo1Gg1qtRrPZxLIs
      yuUypmlSqVRot9uUSiVsus95aD3RKpBZK3Luo0sMHzsO1SzR/iRrd+c4kkySzhRwWVXwdeOi
      xnYmw/CxKcL+B1+fJB7PBx98QF9fH1NTU7zzzjuMj49jmiapVOr+e7leeeUVPv/8c/L5PLqu
      U6/XCYfDdHd38/zzz3f6FA6sJ/oEqBbSxPqPsHx3lvOfXuXCuf/EG4rw4bv/hak7yVcc5DIp
      sptrbGXSXL5ya6/rVkpPTw+zs7MYhkE8HufGjRssLCyQTqfx+/1omoZhGDidTizLoquri1gs
      RjabpdFodLr8A+2JPgHCiaO0ly8xdHSCRCRMMD5AenWJF17+FpFYgkt3fknN1cWLJ0ZotNbo
      HxzY67qVMjAwQF9fH0tLSwwPDzM+Pk48HqdarVIoFPD7/ayvrxOLxThx4gS5XI6+vj4WFxc5
      duxYp8s/0PZhM5zF6tI9Ij2DhPye+0elJfLJyI2w/bUPd4I1hkYOX3O0UJOsAgmlSQCE0iQA
      Qmm2doSligXkBTE70x8J43TonS7jG0taIoXSZAoklCYBEEqztSMsW6lgIRcBjyPmD6Ar9Mb2
      TrE1AH/6k3+RO8GP6Udv/CH94Uiny/jGkz8xQmkSAKE0CYBQmgRAKG0fAmBhGNKEIQ6HPVsF
      KudTfPzpTaI9PWTu3WXihRfRTZN8Ls2RyWeJBr17NZQyzp07RyAQ4NSpU1y7do2VlRU0TSMY
      DGKaJlNTU4RCIc6ePUtvby/1eh3LsqjVanR3d3P69OlOn8KBt2efAJVClsnnptHMOonBo2zn
      1tm8N4+zq4eFO9IS+SSCwSArKyu02+37rY+BQIB0Ok0ymcSyLHRdx+v1srW1hcvl4tSpU/T0
      9HDy5MlOl38o7NknQOLIca58NsORseO4sLC0FtqwxsrSXY5NPL1XwyglFAoxPj7OzZs3ARgd
      HcU0TSYmJlhYWMDr9ZLNZunq6iKZTHL16lXy+TxHjx7FKc8TfSx79q+kOZycfPHMA8ej3THg
      i81wYmfGx8f/36/19T34MotXX311P8v5RpJVIKE0CYBQmgRAKE0CIJRma0fYJ8uLmC25GH4c
      Lx4ZweeSx0nuN2mJFEqTKZBQmgRAKE0CIJRm6/3yP/7nf6RoHL6WyGR3nL98/Xc6XYbYB7YG
      oGI2qBzC59XXzMNXs3g8MgUSSpMACKVJAITSJABCaV+7CL7x2ccE+ycxjTIYNQaGh0hnC9y9
      dRU9EKOvO8bE5DjXZy5i+eOEXU0iPUPUynncLhf1totMep3eRIxWrYYr3EMxvcrA6CQ+1+HO
      Wrvd5sKFCwSDQU6cOMH58+eJxWLcuXOH8fFxVlZWmJ6exjAMrl27RjKZZGtri5dffpm3336b
      119/vdOnIB7iawEwdQ/rd2ehmcfZfYK7Z39KYOI79PQPUi1XaBbSZBtJmvg5OXmUD979NdvX
      bhNI9BJ0abTa4PX5SKfXKOZM3P5NStkMa/k2v/XS4e4KczgcBINBqtUqTqcTt9tNqVTC7XaT
      TqdxuVzcvXuXaDRKrVbD7/fjdrv58MMPWVpaolqt4vf7O30a4v/4WgB6E32Eh2Ah00dxfYlj
      z0zTNdRPai5FsLuf4YgL3aET8ll8PnsHlzdIMjFE39AQxc0Vtg0nvYkuHDRJdLtptcosNlr0
      9XV36vz2TLPZpFAoEI1GuX79OvV6nd7eXmq1GiMjIywtLRGJRNB1nVAoRKVSYX19nVdeeYXB
      wUG8XnkowEFk62a4w/qWyLF4nL/93h8A3H/z+sM29bXbbRzyQNtDRTqnd+hRu1nll//wkf9j
      QmkSAKE0CYBQmq3XAN+bep56s2nnkHsiFgh0ugSxT6QlUijtvwERWwVJohxyaAAAAABJRU5E
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
